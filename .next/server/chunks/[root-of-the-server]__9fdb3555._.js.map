{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/HTML%2C%20CSS%2C%20JS/Projects/Nextjs%20Project%201%20-%20GetMeAChai/get-me-a-chai/models/User.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\nconst { Schema, model } = mongoose;\r\n\r\nconst UserSchema = new Schema({\r\n    email: { type: String, required: true },\r\n    name: { type: String},\r\n    username: { type: String, required: true },\r\n    bio: { type: String, default: \"Hey there!\" },\r\n    profilepic: {type: String},\r\n    coverpic: {type: String},\r\n    razorpayid: { type: String },\r\n    razorpaysecret: { type: String },\r\n    createdAt: { type: Date, default: Date.now },\r\n    updatedAt: { type: Date, default: Date.now },\r\n    });\r\n\r\nexport default mongoose.models.User || model(\"User\", UserSchema);"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,yGAAA,CAAA,UAAQ;AAElC,MAAM,aAAa,IAAI,OAAO;IAC1B,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,MAAM;QAAE,MAAM;IAAM;IACpB,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,KAAK;QAAE,MAAM;QAAQ,SAAS;IAAa;IAC3C,YAAY;QAAC,MAAM;IAAM;IACzB,UAAU;QAAC,MAAM;IAAM;IACvB,YAAY;QAAE,MAAM;IAAO;IAC3B,gBAAgB;QAAE,MAAM;IAAO;IAC/B,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;IAC3C,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;AAC3C;uCAEW,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,QAAQ","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/HTML%2C%20CSS%2C%20JS/Projects/Nextjs%20Project%201%20-%20GetMeAChai/get-me-a-chai/models/Payment.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\nconst { Schema,model } = mongoose;\r\n\r\nconst PaymentSchema = new Schema({\r\n    name: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    to_user: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    order_id: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    message: {\r\n        type: String,\r\n    },\r\n    amount: {\r\n        type: Number,\r\n        required: true\r\n    },\r\n    createdAt: {\r\n        type: Date,\r\n        default: Date.now,\r\n    },\r\n    updatedAt: {\r\n        type: Date,\r\n        default: Date.now,\r\n    },\r\n    done: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n\r\n})\r\n\r\nexport default mongoose.models.Payment || model(\"Payment\", PaymentSchema);  "],"names":[],"mappings":";;;AAAA;;AACA,MAAM,EAAE,MAAM,EAAC,KAAK,EAAE,GAAG,yGAAA,CAAA,UAAQ;AAEjC,MAAM,gBAAgB,IAAI,OAAO;IAC7B,MAAM;QACF,MAAM;QACN,UAAU;IACd;IACA,SAAS;QACL,MAAM;QACN,UAAU;IACd;IACA,UAAU;QACN,MAAM;QACN,UAAU;IACd;IACA,SAAS;QACL,MAAM;IACV;IACA,QAAQ;QACJ,MAAM;QACN,UAAU;IACd;IACA,WAAW;QACP,MAAM;QACN,SAAS,KAAK,GAAG;IACrB;IACA,WAAW;QACP,MAAM;QACN,SAAS,KAAK,GAAG;IACrB;IACA,MAAM;QACF,MAAM;QACN,SAAS;IACb;AAEJ;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,WAAW","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/HTML%2C%20CSS%2C%20JS/Projects/Nextjs%20Project%201%20-%20GetMeAChai/get-me-a-chai/db/connectDb.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst connectDB = async () => {\r\n  try {\r\n    const conn = await mongoose.connect(`mongodb://localhost:27017/chai`, {\r\n      useNewUrlParser: true,\r\n    });\r\n    console.log(`MongoDB Connected: {conn.connection.host}`);\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    process.exit(1);\r\n  }\r\n}\r\n\r\nexport default connectDB"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY;IAChB,IAAI;QACF,MAAM,OAAO,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,CAAC,8BAA8B,CAAC,EAAE;YACpE,iBAAiB;QACnB;QACA,QAAQ,GAAG,CAAC,CAAC,yCAAyC,CAAC;IACzD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,MAAM,OAAO;QAC3B,QAAQ,IAAI,CAAC;IACf;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/HTML%2C%20CSS%2C%20JS/Projects/Nextjs%20Project%201%20-%20GetMeAChai/get-me-a-chai/app/api/auth/%5B...nextauth%5D/route.js"],"sourcesContent":["import NextAuth from 'next-auth'\r\nimport GitHubProvider from \"next-auth/providers/github\";\r\nimport TwitterProvider from \"next-auth/providers/twitter\";\r\nimport mongoose from \"mongoose\";\r\nimport User from '@/models/User';\r\nimport Payment from '@/models/Payment';\r\nimport connectDB from '@/db/connectDb';\r\n// import AppleProvider from 'next-auth/providers/apple'\r\n// import FacebookProvider from 'next-auth/providers/facebook'\r\nimport GoogleProvider from 'next-auth/providers/google'\r\n// import EmailProvider from 'next-auth/providers/email'\r\n\r\nexport const authoptions = NextAuth({\r\n    providers: [\r\n        GitHubProvider({\r\n            clientId: process.env.GITHUB_ID,\r\n            clientSecret: process.env.GITHUB_SECRET\r\n        }),\r\n        TwitterProvider({\r\n            clientId: process.env.TWITTER_CLIENT_ID,\r\n            clientSecret: process.env.TWITTER_CLIENT_SECRET\r\n        }),\r\n        // AppleProvider({\r\n        //     clientId: process.env.APPLE_ID,\r\n        //     clientSecret: process.env.APPLE_SECRET\r\n        // }),\r\n        // FacebookProvider({\r\n        //     clientId: process.env.FACEBOOK_ID,\r\n        //     clientSecret: process.env.FACEBOOK_SECRET\r\n        // }),\r\n        GoogleProvider({\r\n            clientId: process.env.GOOGLE_ID,\r\n            clientSecret: process.env.GOOGLE_SECRET\r\n        }),\r\n        // // Passwordless / email sign in\r\n        // EmailProvider({\r\n        //     server: process.env.MAIL_SERVER,\r\n        //     from: 'NextAuth.js <no-reply@example.com>'\r\n        // }),\r\n    ],\r\n    callbacks: {\r\n        async signIn({ user, account, profile, email, credentials }) {\r\n            if (account.provider == \"github\") {\r\n                await connectDB()\r\n                // Check if the user already exists in the database\r\n                const currentUser = await User.findOne({ email: email })\r\n                if (!currentUser) {\r\n                    // Create a new user\r\n                    const newUser = await User.create({\r\n                        email: user.email,\r\n                        username: user.email.split(\"@\")[0],\r\n                    })\r\n                }\r\n                return true\r\n            }\r\n        },\r\n\r\n        async session({ session, user, token }) {\r\n            const dbUser = await User.findOne({ email: session.user.email })\r\n            session.user.name = dbUser.username\r\n            return session\r\n        },\r\n    }\r\n})\r\n\r\nexport { authoptions as GET, authoptions as POST }"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,8DAA8D;AAC9D;;;;;;;;;AAGO,MAAM,cAAc,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE;IAChC,WAAW;QACP,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACX,UAAU,QAAQ,GAAG,CAAC,SAAS;YAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;QAC3C;QACA,CAAA,GAAA,sJAAA,CAAA,UAAe,AAAD,EAAE;YACZ,UAAU,QAAQ,GAAG,CAAC,iBAAiB;YACvC,cAAc,QAAQ,GAAG,CAAC,qBAAqB;QACnD;QACA,kBAAkB;QAClB,sCAAsC;QACtC,6CAA6C;QAC7C,MAAM;QACN,qBAAqB;QACrB,yCAAyC;QACzC,gDAAgD;QAChD,MAAM;QACN,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACX,UAAU,QAAQ,GAAG,CAAC,SAAS;YAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;QAC3C;KAMH;IACD,WAAW;QACP,MAAM,QAAO,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE;YACvD,IAAI,QAAQ,QAAQ,IAAI,UAAU;gBAC9B,MAAM,CAAA,GAAA,iHAAA,CAAA,UAAS,AAAD;gBACd,mDAAmD;gBACnD,MAAM,cAAc,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;oBAAE,OAAO;gBAAM;gBACtD,IAAI,CAAC,aAAa;oBACd,oBAAoB;oBACpB,MAAM,UAAU,MAAM,gHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;wBAC9B,OAAO,KAAK,KAAK;wBACjB,UAAU,KAAK,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;oBACtC;gBACJ;gBACA,OAAO;YACX;QACJ;QAEA,MAAM,SAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;YAClC,MAAM,SAAS,MAAM,gHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;gBAAE,OAAO,QAAQ,IAAI,CAAC,KAAK;YAAC;YAC9D,QAAQ,IAAI,CAAC,IAAI,GAAG,OAAO,QAAQ;YACnC,OAAO;QACX;IACJ;AACJ","debugId":null}}]
}