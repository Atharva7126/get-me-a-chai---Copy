{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/HTML%2C%20CSS%2C%20JS/Projects/Nextjs%20Project%201%20-%20GetMeAChai/get-me-a-chai/models/Payment.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\nconst { Schema,model } = mongoose;\r\n\r\nconst PaymentSchema = new Schema({\r\n    name: {\r\n        type: String,\r\n        required: true,\r\n    },\r\n    to_user: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    order_id: {\r\n        type: String,\r\n        required: true\r\n    },\r\n    message: {\r\n        type: String,\r\n    },\r\n    amount: {\r\n        type: Number,\r\n        required: true\r\n    },\r\n    createdAt: {\r\n        type: Date,\r\n        default: Date.now,\r\n    },\r\n    updatedAt: {\r\n        type: Date,\r\n        default: Date.now,\r\n    },\r\n    done: {\r\n        type: Boolean,\r\n        default: false\r\n    }\r\n})\r\n\r\nexport default mongoose.models.Payment || model(\"Payment\", PaymentSchema);  "],"names":[],"mappings":";;;AAAA;;AACA,MAAM,EAAE,MAAM,EAAC,KAAK,EAAE,GAAG,yGAAA,CAAA,UAAQ;AAEjC,MAAM,gBAAgB,IAAI,OAAO;IAC7B,MAAM;QACF,MAAM;QACN,UAAU;IACd;IACA,SAAS;QACL,MAAM;QACN,UAAU;IACd;IACA,UAAU;QACN,MAAM;QACN,UAAU;IACd;IACA,SAAS;QACL,MAAM;IACV;IACA,QAAQ;QACJ,MAAM;QACN,UAAU;IACd;IACA,WAAW;QACP,MAAM;QACN,SAAS,KAAK,GAAG;IACrB;IACA,WAAW;QACP,MAAM;QACN,SAAS,KAAK,GAAG;IACrB;IACA,MAAM;QACF,MAAM;QACN,SAAS;IACb;AACJ;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,WAAW","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/HTML%2C%20CSS%2C%20JS/Projects/Nextjs%20Project%201%20-%20GetMeAChai/get-me-a-chai/db/connectDb.js"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst connectDB = async () => {\r\n  try {\r\n    const conn = await mongoose.connect(`mongodb://localhost:27017/chai`, {\r\n      useNewUrlParser: true,\r\n    });\r\n    console.log(`MongoDB Connected: {conn.connection.host}`);\r\n  } catch (error) {\r\n    console.error(error.message);\r\n    process.exit(1);\r\n  }\r\n}\r\n\r\nexport default connectDB"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY;IAChB,IAAI;QACF,MAAM,OAAO,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,CAAC,8BAA8B,CAAC,EAAE;YACpE,iBAAiB;QACnB;QACA,QAAQ,GAAG,CAAC,CAAC,yCAAyC,CAAC;IACzD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,MAAM,OAAO;QAC3B,QAAQ,IAAI,CAAC;IACf;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/HTML%2C%20CSS%2C%20JS/Projects/Nextjs%20Project%201%20-%20GetMeAChai/get-me-a-chai/app/api/razorpay/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { validatePaymentVerification } from \"razorpay/dist/utils/razorpay-utils\";\r\nimport Payment from \"@/models/Payment\";\r\nimport connectDB from \"@/db/connectDb\";\r\nimport Razorpay from \"razorpay\";\r\n\r\nexport const POST = async (req) => {\r\n    await connectDB();\r\n    let body = await req.formData();\r\n    body = Object.fromEntries(body);\r\n\r\n    // check if razorpayOrderId is present on the server\r\n    let p = await Payment.findOne({ order_id: body.razorpay_order_id });\r\n    if (!p) {\r\n        return NextResponse.json({ success: false, message: \"Order not found\" }, { status: 404 });\r\n    }\r\n    // verify the payment signature\r\n    let isValid = validatePaymentVerification(\r\n        {\r\n            \"order_id\": body.razorpay_order_id, \"payment_id\": body.razorpay_payment_id\r\n        },\r\n        body.razorpay_signature\r\n        , process.env.RAZORPAY_SERET_KEY\r\n    );\r\n    if (isValid) {\r\n        const updatePayment = await Payment.findOneAndUpdate(\r\n            { order_id: body.razorpay_order_id },\r\n            { done: true },\r\n            { updateAt: Date.now() },\r\n            { new: true }\r\n        );\r\n        return NextResponse.redirect(`${process.env.NEXT_PUBLIC_URL}/${updatePayment.to_user}?success=true`)\r\n    } else {\r\n        return NextResponse.json({ success: false, message: \"Payment verification failed\" }, { status: 400 });\r\n    }\r\n\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,MAAM,OAAO,OAAO;IACvB,MAAM,CAAA,GAAA,iHAAA,CAAA,UAAS,AAAD;IACd,IAAI,OAAO,MAAM,IAAI,QAAQ;IAC7B,OAAO,OAAO,WAAW,CAAC;IAE1B,oDAAoD;IACpD,IAAI,IAAI,MAAM,mHAAA,CAAA,UAAO,CAAC,OAAO,CAAC;QAAE,UAAU,KAAK,iBAAiB;IAAC;IACjE,IAAI,CAAC,GAAG;QACJ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAkB,GAAG;YAAE,QAAQ;QAAI;IAC3F;IACA,+BAA+B;IAC/B,IAAI,UAAU,CAAA,GAAA,gKAAA,CAAA,8BAA2B,AAAD,EACpC;QACI,YAAY,KAAK,iBAAiB;QAAE,cAAc,KAAK,mBAAmB;IAC9E,GACA,KAAK,kBAAkB,EACrB,QAAQ,GAAG,CAAC,kBAAkB;IAEpC,IAAI,SAAS;QACT,MAAM,gBAAgB,MAAM,mHAAA,CAAA,UAAO,CAAC,gBAAgB,CAChD;YAAE,UAAU,KAAK,iBAAiB;QAAC,GACnC;YAAE,MAAM;QAAK,GACb;YAAE,UAAU,KAAK,GAAG;QAAG,GACvB;YAAE,KAAK;QAAK;QAEhB,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,6DAA+B,CAAC,EAAE,cAAc,OAAO,CAAC,aAAa,CAAC;IACvG,OAAO;QACH,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAA8B,GAAG;YAAE,QAAQ;QAAI;IACvG;AAEJ","debugId":null}}]
}